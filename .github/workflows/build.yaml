name: C++ Example
on:
  push:
    branches:
      - main

permissions:
  contents: write
  deployments: write

jobs:
  benchmark:
    name: Run C++ benchmark example
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Run benchmark
        run: git submodule update --init --recursive && mkdir build && cd build && cmake .. && make -j4 && ./benchmark_test --benchmark_format=json | tee benchmark_result.json

      # - name: Store benchmark result
      #   uses: benchmark-action/github-action-benchmark@v1
      #   with:
      #     name: C++ Benchmark
      #     tool: 'googlecpp'
      #     output-file-path: build/benchmark_result.json
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     auto-push: true
      #     # Show alert with commit comment on detecting possible performance regression
      #     alert-threshold: '200%'
      #     comment-on-alert: true
      #     fail-on-alert: true
      #     alert-comment-cc-users: '@ktrz'

      - name: Store benchmark result - separate results repo
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: C++ Benchmark
          tool: 'googlecpp'
          output-file-path: build/benchmark_result.json
          github-token: ${{ secrets.BENCHMARK_ACTION_BOT_TOKEN }}
          auto-push: true
          # Show alert with commit comment on detecting possible performance regression
          alert-threshold: '50%'
          comment-on-alert: true
          fail-on-alert: true
          alert-comment-cc-users: '@ktrz'
          gh-repository: 'github.com/lucabart97/benchmark_test_result'




# name: Minimal setup
# on:
#   push:
#     branches:
#       - main

# jobs:
#   build_adn_benchmark:
#     name: Performance regression check
#     runs-on: ubuntu-latest
#     steps:
#       #- run: git submodule update --init --recursive
#       - name: Checkout repository
#         uses: actions/checkout@v2
#       - name: Checkout submodules
#         run: git submodule update --init --recursive
#       - name: build code
#         run: git submodule update --init --recursive && mkdir build && cd build && cmake .. && make -j4 && ./benchmark_test --benchmark_format=json | tee benchmark_result.json
#       - name: Download previous benchmark data
#         uses: actions/cache@v1
#         with:
#           path: ./cache
#           key: ${{ runner.os }}-benchmark
#       - name: try ls
#         run: ls
#       # Run `github-action-benchmark` action
#       - name: Store benchmark result
#         uses: benchmark-action/github-action-benchmark@v1
#         with:
#           tool: 'googlecpp'
#           output-file-path: build/benchmark_result.json
#       # Upload the updated cache file for the next job by actions/cache 